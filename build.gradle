plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '6.2.1'
	id 'org.hibernate.orm' version '6.5.2.Final'
	id 'org.graalvm.buildtools.native' version '0.10.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// MySQL 드라이버 추가
	runtimeOnly 'mysql:mysql-connector-java'
	// H2 드라이버는 제거하거나 개발 환경에서만 사용
	// runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Swagger 의존성
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.example.faq_project.codegen'
	generateClient = true
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
